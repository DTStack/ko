"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[468],{4852:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var i=n(9231);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),p=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),m=p(n),f=r,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||l;return n?i.createElement(d,o(o({ref:t},c),{},{components:n})):i.createElement(d,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var p=2;p<l;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3083:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return s}});var i=n(4197),r=n(9567),l=(n(9231),n(4852)),o=["components"],a={sidebar_position:3,title:"Command Line Interface"},u=void 0,p={unversionedId:"cli",id:"cli",title:"Command Line Interface",description:"ko dev",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/ko/docs/current/cli",editUrl:"https://github.com/DTStack/ko/website/docs/cli.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Command Line Interface"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/ko/docs/current/getting-started"},next:{title:"Configuration",permalink:"/ko/docs/current/configuration"}},c={},s=[{value:"ko dev",id:"ko-dev",level:2},{value:"ko build",id:"ko-build",level:2},{value:"ko lint",id:"ko-lint",level:2}],m={toc:s};function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"ko-dev"},"ko dev"),(0,l.kt)("p",null,"start a development server that provides live reloading."),(0,l.kt)("p",null,"Optional arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-h --hash"),": output filename with it's contenthash"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-a,--analyzer"),": show output files with an interactive zoomable treemap in ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"http://127.0.0.1:8888"},"http://127.0.0.1:8888")))),(0,l.kt)("h2",{id:"ko-build"},"ko build"),(0,l.kt)("p",null,"Use internal webpack instance to bundle files, compiled files will be write to ",(0,l.kt)("strong",{parentName:"p"},"dist")," directory by default."),(0,l.kt)("p",null,"Optional arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--hash"),": output filename with it's contenthash")),(0,l.kt)("h2",{id:"ko-lint"},"ko lint"),(0,l.kt)("p",null,"Lint your code via prettier, eslint or stylelint, You can use ",(0,l.kt)("inlineCode",{parentName:"p"},"pnpm")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"npx")," to run lint on the command like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Run lint via prettier on files:\npnpm exec ko prettier file1.js file2.ts\n# Run lint via prettier on multiple files via glob syntax and try to fix problems\npnpm exec ko prettier "src/**" --write\n# Run lint via eslint on files:\npnpm exec ko eslint file1.js file2.ts\n# Run lint via eslint on multiple files via glob syntax on concurrency mode\npnpm exec ko eslint "src/**" --concurrency\n# Run lint via stylelint on files:\npnpm exec ko stylelint file1.css file2.less\n# Run lint via stylelint on multiple files via glob syntax with custom config\npnpm exec ko stylelint "src/**" --configPath="/path/to/custom/config"\n')),(0,l.kt)("p",null,"Optional arguments:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-w, --write"),": try to fix problems automatically"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-c, --configPath <path>"),": overriding default config path, and use this configuration"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--concurrency"),": use multithreading to lint files"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--concurrentNumber <number>"),": specify threads number, default is ",(0,l.kt)("inlineCode",{parentName:"li"},"require('os').cpus().length"))),(0,l.kt)("p",null,"You can add ignore patterns in ",(0,l.kt)("inlineCode",{parentName:"p"},".gitignore")," file and ",(0,l.kt)("inlineCode",{parentName:"p"},".prettierignore")," file via prettier, ",(0,l.kt)("inlineCode",{parentName:"p"},".eslintignore")," file via eslint, ",(0,l.kt)("inlineCode",{parentName:"p"},".stylelint")," file via stylelint,\nall of these patterns matched files will be ignored when lint running."))}f.isMDXComponent=!0}}]);